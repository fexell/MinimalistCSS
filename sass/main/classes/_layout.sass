
.container
	position: relative
	width: 100%
	height: 100%

	&.flex
		@extend .container

	&.grid
		@extend .container

.width
	&--xs
		@include mq( min, xs )
			width: 70rem
		@include mq( max, xs )
			width: 100%

	&--sm
		@extend .width--xs
		@include mq( min, sm )
			width: 92rem


	&--md
		@extend .width--xs
		@extend .width--sm
		@include mq( min, md )
			width: 120rem

	&--lg
		@extend .width--xs
		@extend .width--sm
		@extend .width--md
		@include mq( min, lg )
			width: 160rem
				

/* For/each loop generated classes */

// Width classes
@for $i from 1 through 10
	.width-#{ $i }0
		width: $i * 10 + %

// Padding and margin classes
@each $n, $p in $sizes
	// Padding
	.padding
		&--#{ $n }
			padding: $p
		
		&--sides-#{ $n }
			padding:
				left: $p
				right: $p

		&--ends-#{ $n }
			padding:
				top: $p
				bottom: $p

	// Margin
	.margin,
	.offset
		&--#{ $n }
			margin: $p
		
		&--sides--#{ $n }
			margin:
				left: $p
				right: $p

		&--ends--#{ $n }
			margin:
				top: $p
				bottom: $p

// pw = "padding width"
@for $i from 1 through 10
	.padding--width-#{ $i }0
		min-width: $i * 100 + px
		padding:
			left: $i * 10 + %
			right: $i * 10 + %

// fw = "font-weight"
@for $i from 1 through 9
	.font--weight-#{ $i }00
		font:
			weight: $i * 100