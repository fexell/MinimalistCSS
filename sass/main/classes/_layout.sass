
.container
	position: relative
	width: 100%
	min-height: 100%

	&--flex
		display: flex

		&--row
			flex:
				direction: row

		&--column
			flex:
				direction: column

	&--grid
		@extend .container
		display: grid

.width
	// These sizes comes from the breakpoints in ../essential/_mixins.sass
	&--xs
		@include mq( min, xs )
			width: 48rem
		@include mq( max, xs )
			width: 100%

	&--sm
		@extend .width--xs
		@include mq( min, sm )
			width: 60rem


	&--md
		@extend .width--xs
		@extend .width--sm
		@include mq( min, md )
			width: 75rem

	&--lg
		@extend .width--xs
		@extend .width--sm
		@extend .width--md
		@include mq( min, lg )
			width: 120rem

/* For/each loop generated classes */

// Width classes
@for $i from 1 through 10
	.width-#{ $i }0
		width: $i * 10 + %

// Padding and margin classes
@each $n, $p in $sizes
	// Padding
	.padding
		&--#{ $n }
			padding: $p
		
		&--sides-#{ $n }
			padding: inherit $p

		&--ends-#{ $n }
			padding: $p inherit

	// Margin
	.margin
		&--#{ $n }
			margin: $p
		
		&--sides-#{ $n }
			margin: inherit $p

		&--ends-#{ $n }
			margin: $p inherit

// pw = "padding width"
@for $i from 1 through 10
	.padding--width-#{ $i }0
		min-width: $i * 100 + px
		padding:
			left: $i * 10 + %
			right: $i * 10 + %

// fw = "font-weight"
@for $i from 1 through 9
	.font--weight-#{ $i }00
		font:
			weight: $i * 100